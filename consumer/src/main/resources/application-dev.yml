
demo:
  name: java
  age: 20

spring:
  #######redis config##############
  redis:
#    如果没有开启哨兵项目启动不了
#    sentinel:
#      master: mymaster
#      nodes: 10.1.51.230:26379,10.1.51.230:26380,10.1.51.230:26381
    password: redis
    database: 0
    jedis:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
    #timeout: 6000
    host: 10.1.51.96
    port: 6379

  ##############datasource config##########################
  datasource:
    mysql:
      url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8
      username: root
      password: root
      driver-class-name: com.mysql.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource
      initialSize: 5
      minIdle: 5
      maxActive: 20
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 from dual
      testWhileIdle: true
      testOnBorrow: true
      testOnReturn: true
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      filters: stat,wall,log4j
      useGlobalDataSourceStat: true
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    sqlserver:
      url: jdbc:sqlserver://xxxxx:1433;DatabaseName=Minfo
      username: xxx
      password: xxx
      driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
      maxActive: 200
      minIdle: 50
      initialSize: 10
      maxWait: 5000
      testWileIdle: true
      validationQuery: select 1

  ######jpa config###################
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect  # innodb 引擎
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: update
    database: mysql
    generate-ddl: true
    open-in-view: true

  ###################activemq config########################
  application:
    name: dubbo-consumer
    version: 1.0
  activemq:
    broker-url: tcp://10.1.51.96:61616 # activemq broker Url config
    user: admin
    password: admin
    pool:
      enabled: true
      max-connections: 10
    queue-name: test.msg.queue
    out-queue-name: test.msg.out-queue
    topic-name: test.msg.topic


server:
  port: 9091

############dubbo config#########################
dubbo:
  application:
    id: dubbo-consumer
    name: dubbo-consumer
  protocol:
    id: dubbo
    name: dubbo
#    port: 20882
#    status: server
  registry:
    protocol: zookeeper
    address: 10.1.51.96:2181
    id: zookeeper-registry

################motan config###################################
motan:
  registry:
    regProtocol: zookeeper
    address: 10.1.51.96:2181
    requestTimeout: 1000
    connectTimeout: 3000
  protocol:
    name: motan
    minWorkThread: 20
    maxWorkThread: 50
    filter: statistic
  annotation:
    package: com.example.consumer.motan
  client:
    group: motangroup
    registry: registry
    protocal: motan
    check: true
    requestTimeout: 3000
    connectTimeout: 5000


endpoints:
  dubbo:
    enabled: true

management:
  endpoint:
    dubbo-configs:
      enabled: true
    dubbo:
      enabled: true
    dubbo-servces:
      enabled: true
    dubbo-properties:
      enabled: true
    dubbo-shutdown:
      enabled: true
    dubbo-refrences:
      enabled: true
  health:
    dubbo:
      status:
        defaults: memory
        extras: load,threadpool
  endpoints:
    web:
      exposure:
        include: '*'

###############log config#####################
logging:
  file: log\consumer.log
  level:
    root: info
    org.springframework.transaction: debug
    org.springframework.web: info
    com.example.consumer.mapper: debug
    org.apache.activemq: info
    org.springframework.jdbc: debug
    org.springframework.cache: debug



